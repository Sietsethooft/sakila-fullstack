# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - movieMateRentals

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_920C3582C8994ABA94355B7D73AFAF80 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8D8C98113D2E4D2C868906F6DF4EB9FC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_05DF7ACE005A47FA8D4B8114E9B8FDBC }}

      - name: Debug DB_PORT
        run: |
          if [ -z "${{ secrets.DB_PORT }}" ]; then echo "DB_PORT is empty"; else echo "DB_PORT is set"; fi

      - name: Test database connection
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          mysql -h "${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" -P "${{ secrets.DB_PORT }}" -e "USE ${DB_DATABASE}; SHOW TABLES;"
        env:
          DB_DATABASE: ${{ secrets.DB_DATABASE }}

      - name: Set Azure Web App settings from secrets
        uses: azure/appservice-settings@v1
        with:
          app-name: movieMateRentals
          app-settings-json: |
            [
              { "name": "DB_HOST", "value": "${{ secrets.DB_HOST }}", "slotSetting": false },
              { "name": "DB_USER", "value": "${{ secrets.DB_USER }}", "slotSetting": false },
              { "name": "DB_PASSWORD", "value": "${{ secrets.DB_PASSWORD }}", "slotSetting": false },
              { "name": "DB_DATABASE", "value": "${{ secrets.DB_DATABASE }}", "slotSetting": false },
              { "name": "DB_PORT", "value": "${{ secrets.DB_PORT }}", "slotSetting": false },
              { "name": "SECRET_KEY", "value": "${{ secrets.SECRET_KEY }}", "slotSetting": false }
            ]

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "movieMateRentals"
          slot-name: "Production"
          package: .
